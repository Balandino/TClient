<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>408</y>
      <w>444</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>TClient
-

-
+ TClient: TClient
+ downloadFile(newFileLocation: Path, piecePolicy: PieceSelectionPolicy): void
+ setSeedAfterwards(setting: boolean): void
+ setMaxConns(numConns: int): void
+ shutdownTorrent(file: Path):
+ shutdownClient(): void
+ setBlocksPending(num: int): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>894</x>
      <y>372</y>
      <w>402</w>
      <h>318</h>
    </coordinates>
    <panel_attributes>NIOThread
-
- torrentsToProcess: HashSet&lt;TorrentFile&gt; &lt;&lt;volatile&gt;&gt;
- torrentsProcessing: HashMap&lt;Integer, TorrentFile&gt;
- peerManagers: HashMap&lt;Integer, PeerManager&gt;
- pieceSelectors: HashMap&lt;Integer, PieceSelector&gt;
+ nioShutdown: boolean &lt;&lt;volatile&gt;&gt;
+ shutdown: HashMap&lt;Path, boolean&gt; &lt;&lt;volatile&gt;&gt;
+ maxNumDownloadingConns: int &lt;&lt;volatile&gt;&gt;
+ maxNumSeedingConns: int &lt;&lt;volatile&gt;&gt;
+ seedAfterwards: boolean &lt;&lt;volatile&gt;&gt;
+ blocksWaiting: int
_- nioKeys: Integer_
_-handshake: byte array_

-
_+ getInstance()_
- updateAllHaveQueues(torrentFile: Integer, haveMsg: String): void
- checkForTimeout(channelData ChannelData): boolean
- processData(torrentFile: TorrentFile, channelData: ChannelData): void
- recieveMessage(messages: String, torrentFile: TorrentFile, channelData: ChannelData): void
- closeConnection(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>498</x>
      <y>834</y>
      <w>228</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>PeerManager
-
- usablePeers: HashSet
-
+ PeerManager: (peers: LinkedList): PeerManager
+ PeerManager: (peers: String): PeerManager
+ usablePeers(): boolean
+ getPeer(): Peer
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1062</x>
      <y>702</y>
      <w>234</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
/PieceSelector/
-
# endGame: boolean
-
/+ getPiece(bitfield): int/
/+ processBitfield(bitfield: ByteArray)/
/+ pieceAvailable(): boolean/
/+ endGameStatus(): boolean/
/+ processHave(piece: int): void/
/+ pieceObtained(piece: int): void/
/+ pieceUnobtained(piece: int): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>498</x>
      <y>702</y>
      <w>228</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>Peer
-
- bitfield: Byte array
- ip: Byte array
- port: Byte array
-
+ Peer(ip: Byte array, port: Byte array)
+ getIP(): Byte array
+ getPort(): Byte array
+ getBitfield(): Byte array
+ setBitfield(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1062</x>
      <y>882</y>
      <w>234</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>RarestFirst
-
- RarestFirst(size: int): RarestFirst
- pieces: 2D int array
- piecesInProgress: HashSet&lt;Integer&gt;
- piecesObtainedCount: int
-
- removeObtainedPieces(piecesArray: pieces): int array

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>618</x>
      <y>438</y>
      <w>288</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
Initialises &gt;
r2=1
r1=1</panel_attributes>
    <additional_attributes>460.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>474</y>
      <w>186</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
r1=1
r2=1
References</panel_attributes>
    <additional_attributes>10.0;670.0;120.0;670.0;120.0;20.0;290.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>804</y>
      <w>36</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Uses</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1170</x>
      <y>822</y>
      <w>60</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>414</y>
      <w>198</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;
r1=1
r2=1
</panel_attributes>
    <additional_attributes>310.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>852</x>
      <y>486</y>
      <w>222</w>
      <h>450</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
r1=1
r2=1
References</panel_attributes>
    <additional_attributes>350.0;730.0;260.0;730.0;260.0;400.0;10.0;400.0;10.0;20.0;70.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>768</x>
      <y>150</y>
      <w>252</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
r1=1
r2=1
After contacting
tracker</panel_attributes>
    <additional_attributes>400.0;20.0;10.0;20.0;10.0;420.0;210.0;420.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1476</x>
      <y>666</y>
      <w>228</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>style=wordwrap
bg=cyan
This will be a rather indirect relationship. The NIOThread will create a Selector object to manage all the channels.  Each channel will have a Key associated with it.  That Key can have an object attached to it.  In this case, the object shall be ChannelData, allowing the channel's state to be preserved between selections.  This gives NIOThread access to ChannelData, but indirectly and only when the relevant channel has been selected.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>846</x>
      <y>174</y>
      <w>174</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
r1=1
r2=1







Before contacting tracker</panel_attributes>
    <additional_attributes>270.0;20.0;10.0;20.0;10.0;360.0;80.0;360.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1386</x>
      <y>420</y>
      <w>102</w>
      <h>306</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;490.0;150.0;490.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>174</y>
      <w>318</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
r1=1
r2=1
</panel_attributes>
    <additional_attributes>500.0;330.0;500.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>42</y>
      <w>288</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>TorrentFile
-
- tFile: HashMap&lt;Object&gt;
- trackerResponse: HashMap&lt;Object&gt;
- currentConns: HashSet&lt;SocketChannel&gt;
/ currentNumCons: int
- numSeedingConns: int
- numDownloadingConns: int
- amountDownloaded: int
- pieceSelectorPolicy: Enum
- torrentStatus: Enum
- fileLocation: Path
-
+ TorrentFile(tFile: HashMap&lt;String, Object&gt;, location: Path): TorrentFile
+ validatePiece(int: pieceNum): boolean
+ validateFile(TorrentFile: tFile): boolean
+ getPeers(): HashSet
+ getCurrentNumConns(): int
+ addConnection(conn: SocketChannel): void
+ getTrackerAddress(): String
+ getTrackerRequest(): String
+ getInfoHash(): byte array
+ shutdownConns(): void
+ removeConn(channel: SocketChannel): void
+ fileComplete(): boolean
+ getNumSeedingConns(): int
+ getNumDownloadingConns(): int
+ getPieceLength(): int
+ addBytesDownloaded(num: int): void
+ getFIleLength(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>642</x>
      <y>318</y>
      <w>264</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;180.0;420.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>534</x>
      <y>246</y>
      <w>222</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>Parser
-

-
_+parse(pathToFile: Path): Object _</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1476</x>
      <y>372</y>
      <w>228</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>ChannelData
-
- outboundQueue: ArrayDeque&lt;String&gt;
- lastMsgReceived: long
- interestTimeout: long
- channelStatus: Enum
- connectionStatus: booleanArray
- nioKey: Integer
- seedingApproved: boolean
- piece: int
- peer: Peer
- blocksRequested: int array
- blocksObtained: Byte buffer
-
+ ChannelData (nioKey : Integer): ChannelData
+ addToOutboundQueue(message: String): void
+ resetLastMsgReceived(): void
+ isChannelChoked(): boolean
+ isChannelInterested(): boolean
+ isPeerChoked(): boolean
+ isPeerInterested(): boolean
+ interestTimeout(): boolean
+ sendMessages(): void
+ workingOnPiece(): boolean
+ setPiece(piece: int): void
+ areBlocksRequested(): boolean
+ addBlocksToOutboundQueue(numBlocks: int): void
+ cancelAllRequestedBlocks(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>582</x>
      <y>318</y>
      <w>18</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>480</y>
      <w>198</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
r1=1
r2=1
References</panel_attributes>
    <additional_attributes>310.0;670.0;80.0;670.0;80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1512</x>
      <y>1056</y>
      <w>162</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
ChannelStatus
-
CONTACTING_TRACKER
MESSAGING_TRACKER
SENDING_HANDSHAKE
WAITING_HANDSHAKE
WAITING_TRACKER_RESPONSE
SENDING_BITFIELD
WAITING_BITFIELD
CHECKING_FOR_PIECE
PROCESSING_MESSAGES
LISTENING_TO_PEER
LISTENING_FOR_BITFIELD
LISTENING_TO_PEER
SENDING_HANDSHAKE_BITFIELD

-

group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1476</x>
      <y>810</y>
      <w>228</w>
      <h>474</h>
    </coordinates>
    <panel_attributes>FlowControls
-

-

group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1512</x>
      <y>846</y>
      <w>162</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
TorrentStatus
-
CONTACTING_TRACKER
MESSAGING_PEERS
-

group=1</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
